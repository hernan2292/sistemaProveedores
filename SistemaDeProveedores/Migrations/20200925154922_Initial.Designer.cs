// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cenope.Models;

namespace SistemaDeProveedores.Migrations
{
    [DbContext(typeof(SistemaProveedoresContextClass))]
    [Migration("20200925154922_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SistemaDeProveedores.Models.FacturaEstadoActualizado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacturasEstadosActualizados");
                });

            modelBuilder.Entity("SistemaDeProveedores.Models.ProductoFactura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Cantidad")
                        .HasColumnType("real");

                    b.Property<string>("IdFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdProducto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductosFacturas");
                });

            modelBuilder.Entity("cenope.Models.Registro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEliminado")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUsuarioCreado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuarioEliminado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Registros");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Registro");
                });

            modelBuilder.Entity("SistemaDeProveedores.Models.Factura", b =>
                {
                    b.HasBaseType("cenope.Models.Registro");

                    b.Property<string>("Archivos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCargaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCargaHasta")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionDisconformidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionRechazado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrdenCompra")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Factura");
                });

            modelBuilder.Entity("SistemaDeProveedores.Models.FacturaEstado", b =>
                {
                    b.HasBaseType("cenope.Models.Registro");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("FacturaEstado");
                });

            modelBuilder.Entity("SistemaDeProveedores.Models.Producto", b =>
                {
                    b.HasBaseType("cenope.Models.Registro");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Producto");
                });

            modelBuilder.Entity("SistemaDeProveedores.Models.Proveedor", b =>
                {
                    b.HasBaseType("cenope.Models.Registro");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Proveedor");
                });

            modelBuilder.Entity("SistemaDeProveedores.Models.Usuario", b =>
                {
                    b.HasBaseType("cenope.Models.Registro");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnName("Usuario_Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
